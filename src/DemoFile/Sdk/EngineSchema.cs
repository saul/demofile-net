// <auto-generated />
// Generated from protocol v14026
#nullable enable
#pragma warning disable CS1591

using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Drawing;
using System.Runtime.CompilerServices;
using DemoFile;

namespace DemoFile.Sdk;

public partial class CEntityComponent
{
    public static SendNodeDecoder<CEntityComponent> CreateFieldDecoder(SerializableField field, DecoderSet decoderSet)
    {
        if (FallbackDecoder.TryCreate(field.VarName, field.VarType, field.FieldEncodingInfo, decoderSet, out var fallback))
        {
            return (CEntityComponent @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
            {
#if DEBUG
                var _field = field;
#endif
                fallback(default, path, ref buffer);
            };
        }
        throw new NotSupportedException($"Unrecognised serializer field: {field.VarName}");
    }
}

public partial class CScriptComponent : CEntityComponent
{
    internal static SendNodeDecoder<CScriptComponent> CreateDowncastDecoder(SerializerKey serializerKey, DecoderSet decoderSet, out Func<CScriptComponent> factory)
    {
        if (serializerKey.Name == "CScriptComponent")
        {
            factory = () => new CScriptComponent();
            return decoderSet.GetDecoder<CScriptComponent>(serializerKey);
        }
        throw new NotImplementedException($"Unknown derived class of CScriptComponent: {serializerKey}");
    }

    public new static SendNodeDecoder<CScriptComponent> CreateFieldDecoder(SerializableField field, DecoderSet decoderSet)
    {
        return CEntityComponent.CreateFieldDecoder(field, decoderSet);
    }
}

public partial class CEntityIdentity
{
    internal static SendNodeDecoder<CEntityIdentity> CreateDowncastDecoder(SerializerKey serializerKey, DecoderSet decoderSet, out Func<CEntityIdentity> factory)
    {
        if (serializerKey.Name == "CEntityIdentity")
        {
            factory = () => new CEntityIdentity();
            return decoderSet.GetDecoder<CEntityIdentity>(serializerKey);
        }
        throw new NotImplementedException($"Unknown derived class of CEntityIdentity: {serializerKey}");
    }

    // MNetworkChangeCallback "entityIdentityNameChanged"
    public Int32 NameStringableIndex { get; private set; }

    public static SendNodeDecoder<CEntityIdentity> CreateFieldDecoder(SerializableField field, DecoderSet decoderSet)
    {
        if (field.VarName == "m_nameStringableIndex")
        {
            var decoder = FieldDecode.CreateDecoder_Int32(field.FieldEncodingInfo);
            return (CEntityIdentity @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
            {
                @this.NameStringableIndex = decoder(ref buffer);
            };
        }
        if (FallbackDecoder.TryCreate(field.VarName, field.VarType, field.FieldEncodingInfo, decoderSet, out var fallback))
        {
            return (CEntityIdentity @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
            {
#if DEBUG
                var _field = field;
#endif
                fallback(default, path, ref buffer);
            };
        }
        throw new NotSupportedException($"Unrecognised serializer field: {field.VarName}");
    }
}

public partial class CEntityInstance<TGameParser>
{
    // MNetworkPriority 56
    public CEntityIdentity? Entity { get; private set; }

    // MNetworkDisable
    public CScriptComponent? CScriptComponent { get; private set; }

    public static SendNodeDecoder<CEntityInstance<TGameParser>> CreateFieldDecoder(SerializableField field, DecoderSet decoderSet)
    {
        if (field.VarName == "m_pEntity")
        {
            Debug.Assert(field.FieldSerializerKey.HasValue);
            var serializerKey = field.FieldSerializerKey.Value;
            var innerDecoder = CEntityIdentity.CreateDowncastDecoder(serializerKey, decoderSet, out var factory);
            return (CEntityInstance<TGameParser> @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
            {
                if (path.Length == 1)
                {
                    var isSet = buffer.ReadOneBit();
                    @this.Entity = isSet ? factory() : null;
                }
                else
                {
                    var inner = @this.Entity ??= factory();
                    innerDecoder(inner, path[1..], ref buffer);
                }
            };
        }
        if (field.VarName == "m_CScriptComponent")
        {
            Debug.Assert(field.FieldSerializerKey.HasValue);
            var serializerKey = field.FieldSerializerKey.Value;
            var innerDecoder = CScriptComponent.CreateDowncastDecoder(serializerKey, decoderSet, out var factory);
            return (CEntityInstance<TGameParser> @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
            {
                if (path.Length == 1)
                {
                    var isSet = buffer.ReadOneBit();
                    @this.CScriptComponent = isSet ? factory() : null;
                }
                else
                {
                    var inner = @this.CScriptComponent ??= factory();
                    innerDecoder(inner, path[1..], ref buffer);
                }
            };
        }
        if (FallbackDecoder.TryCreate(field.VarName, field.VarType, field.FieldEncodingInfo, decoderSet, out var fallback))
        {
            if (field.VarType.IsPointer)
            {
                return (CEntityInstance<TGameParser> @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
                {
#if DEBUG
                    var _field = field;
#endif
                    if (path.Length == 1)
                    {
                        var isSet = buffer.ReadOneBit();
                    }
                    else
                    {
                        fallback(default, path[1..], ref buffer);
                    }
                };
            }
            else
            {
                return (CEntityInstance<TGameParser> @this, ReadOnlySpan<int> path, ref BitBuffer buffer) =>
                {
#if DEBUG
                    var _field = field;
#endif
                    fallback(default, path, ref buffer);
                };
            }
        }
        throw new NotSupportedException($"Unrecognised serializer field: {field.VarName}");
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual void FireCreateEvent()
    {
        Demo.EntityInstanceEvents.Create?.Invoke(this);
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual void FireDeleteEvent()
    {
        Demo.EntityInstanceEvents.Delete?.Invoke(this);
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual void FirePreUpdateEvent()
    {
        Demo.EntityInstanceEvents.PreUpdate?.Invoke(this);
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public virtual void FirePostUpdateEvent()
    {
        Demo.EntityInstanceEvents.PostUpdate?.Invoke(this);
    }
}
